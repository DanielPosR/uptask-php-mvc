!function(){!async function(){try{const t="/api/tareas?id="+s(),a=await fetch(t),o=await a.json();e=o.tareas,n()}catch(e){console.log(e)}}();let e=[],t=[];document.querySelector("#agregar-tarea").addEventListener("click",()=>{o()});function a(a){const o=a.target.value;t=""!==o?e.filter(e=>e.estado===o):[],n()}function n(){!function(){const e=document.querySelector("#listado-tareas");for(;e.firstChild;)e.removeChild(e.firstChild)}(),function(){const t=e.filter(e=>"0"===e.estado),a=document.querySelector("#pendientes");0===t.length?a.disabled=!0:a.disabled=!1}(),function(){const t=e.filter(e=>"1"===e.estado),a=document.querySelector("#completadas");0===t.length?a.disabled=!0:a.disabled=!1}();const a=t.length?t:e;if(0===a.length){const e=document.querySelector("#listado-tareas"),t=document.createElement("LI");return t.textContent="No hay tareas para mostrar",t.classList.add("no-tareas"),void e.appendChild(t)}const r={0:"Pendiente",1:"Completa"};a.forEach(t=>{const{id:a,nombre:d,estado:i}=t,l=document.createElement("LI");l.dataset.tareaId=a,l.classList.add("tarea");const u=document.createElement("P");u.textContent=d,u.ondblclick=()=>{o(!0,{...t})};const m=document.createElement("DIV");m.classList.add("opciones");const p=document.createElement("BUTTON");p.classList.add("estado-tarea"),p.classList.add(""+r[i].toLowerCase()),p.textContent=r[i],p.dataset.estadoTarea=i,p.ondblclick=function(){!function(e){const t="1"===e.estado?"0":"1";e.estado=t,c(e)}({...t})};const f=document.createElement("BUTTON");f.classList.add("eliminar-tarea"),f.dataset.idTarea=a,f.textContent="Eliminar",f.onclick=function(){!function(t){Swal.fire({title:"¿Deseas eliminar esta tarea?",showCancelButton:!0,confirmButtonText:"Sí",cancelButtonText:"Cancelar"}).then(a=>{a.isConfirmed&&async function(t){const{estado:a,id:o,nombre:r}=t,c=new FormData;c.append("id",o),c.append("nombre",r),c.append("estado",a),c.append("proyectoId",s());try{const t="http://localhost:5000/api/tarea/eliminar",a=await fetch(t,{method:"POST",body:c}),r=await a.json();r.resultado&&(Swal.fire("¡Eliminado!",r.mensaje,"success"),e=e.filter(e=>e.id!==o),n())}catch(e){console.log(e)}}(t)})}({...t})},m.appendChild(p),m.appendChild(f),l.appendChild(u),l.appendChild(m);document.querySelector("#listado-tareas").appendChild(l)})}function o(t=!1,a={}){const o=document.createElement("DIV");o.classList.add("modal"),o.innerHTML=`\n            <form class="formulario nueva-tarea">\n\n                <legend>${t?"Editar Tarea":"Añadir Nueva Tarea"}</legend>\n\n                <div class="campo">\n                    <input\n                        type="text"\n                        name="tarea"\n                        placeholder="${t?"Nuevo nombre de tarea":"Añadir tarea al proyecto actual"}"\n                        id="tarea"\n                        value="${a.nombre?a.nombre:""}"\n                    />\n                </div>\n\n                <div class="opciones">\n                    <input\n                        type="submit"\n                        class="submit-nueva-tarea"\n                        value="${t?"Guardar Cambios":"Añadir Tarea"}"\n                    />\n                    <button type="button" class="cerrar-modal">Cancelar</button>\n                </div>\n            </form>\n        `,setTimeout(()=>{document.querySelector(".formulario").classList.add("animar")},0),o.addEventListener("click",d=>{if(d.preventDefault(),d.target.classList.contains("cerrar-modal")){document.querySelector(".formulario").classList.add("cerrar"),setTimeout(()=>{o.remove()},500)}if(d.target.classList.contains("submit-nueva-tarea")){const o=document.querySelector("#tarea").value.trim();if(""===o)return void r("El nombre de la tarea es obligatorio","error",document.querySelector(".formulario legend"));t?(a.nombre=o,c(a)):async function(t){const a=new FormData;a.append("nombre",t),a.append("proyectoId",s());try{const o="http://localhost:5000/api/tarea",c=await fetch(o,{method:"POST",body:a}),s=await c.json();if(r(s.mensaje,s.tipo,document.querySelector(".formulario legend")),"exito"===s.tipo){const a=document.querySelector(".modal");setTimeout(()=>{a.remove()},1500);const o={id:String(s.id),nombre:t,estado:"0",proyetoId:s.proyectoId};e=[...e,o],n()}}catch(e){console.log(e)}}(o)}}),document.querySelector(".dashboard").appendChild(o)}function r(e,t,a){if(!document.querySelector(".alerta")){const n=document.createElement("DIV");n.classList.add("alerta",t),n.textContent=e,a.parentElement.insertBefore(n,a.nextElementSibling),setTimeout(()=>{n.remove()},4e3)}}async function c(t){const{estado:a,id:o,nombre:r}=t,c=new FormData;c.append("id",o),c.append("nombre",r),c.append("estado",a),c.append("proyectoId",s());try{const t="http://localhost:5000/api/tarea/actualizar",s=await fetch(t,{method:"POST",body:c}),d=await s.json();if(console.log(d),"exito"===d.respuesta.tipo){Swal.fire("¡Éxito!",d.respuesta.mensaje,"success");const t=document.querySelector(".modal");t&&t.remove(),e=e.map(e=>(e.id===o&&(e.estado=a,e.nombre=r),e)),n()}}catch(e){console.log(e)}}function s(){const e=new URLSearchParams(window.location.search);return Object.fromEntries(e.entries()).id}document.querySelectorAll('#filtros input[type="radio"]').forEach(e=>{e.addEventListener("input",a)})}();